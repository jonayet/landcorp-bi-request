/*
* jQuery Simply Countable plugin
* Provides a character counter for any text input or textarea
* 
* @version  0.4.2
* @homepage http://github.com/aaronrussell/jquery-simply-countable/
* @author   Aaron Russell (http://www.aaronrussell.co.uk)
*
* Copyright (c) 2009-2010 Aaron Russell (aaron@gc4.co.uk)
* Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
* and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
*/
!function (a) { a.fn.simplyCountable = function (s) { s = a.extend({ counter: "#counter", countType: "characters", maxCount: 140, strictMax: !1, countDirection: "down", safeClass: "safe", overClass: "over", thousandSeparator: ",", onOverCount: function () { }, onSafeCount: function () { }, onMaxCount: function () { } }, s); var t = [33, 34, 35, 36, 37, 38, 39, 40]; return a(this).each(function () { var n = a(this), e = a(s.counter); if (!e.length) return !1; var o = function () { var t, o, r = function (a) { return a - 2 * a + s.maxCount }, u = function () { return "up" === s.countDirection ? o : t }, l = function (a) { var t = ""; if (s.thousandSeparator) { a = "" + a, a.match(/^-/) && (a = a.substr(1), t = "-"); for (var n = a.length - 3; n > 0; n -= 3) a = a.substr(0, n) + s.thousandSeparator + a.substr(n) } return t + a }, C = function (a) { n.val(a).trigger("change") }; if ("words" === s.countType ? (t = s.maxCount - a.trim(n.val()).split(/\s+/).length, "" === n.val() && (t += 1)) : t = s.maxCount - n.val().length, o = r(t), s.strictMax && 0 >= t) { var c = n.val(); if (0 > t && s.onMaxCount(u(), n, e), "words" === s.countType) { var i = c.match(RegExp("\\s?(\\S+\\s+){" + s.maxCount + "}")); i && C(i[0]) } else C(c.substring(0, s.maxCount)); t = 0, o = s.maxCount } e.text(l(u())), e.hasClass(s.safeClass) || e.hasClass(s.overClass) ? 0 > t && e.hasClass(s.safeClass) ? (e.removeClass(s.safeClass).addClass(s.overClass), s.onOverCount(u(), n, e)) : t >= 0 && e.hasClass(s.overClass) && (e.removeClass(s.overClass).addClass(s.safeClass), s.onSafeCount(u(), n, e)) : e.addClass(0 > t ? s.overClass : s.safeClass) }; o(), n.on("keyup blur paste", function (s) { switch (s.type) { case "keyup": a.inArray(s.which, t) < 0 && o(); break; case "paste": setTimeout(o, "paste" === s.type ? 5 : 0); break; default: o() } }) }) } }(jQuery);